transaction <- left_join(transaction, cde)
return(transaction)
}
result.LngLat <- GetLngLat(result)
GetLngLat <- function(transaction) {
transaction$Entr <- as.numeric(transaction$Entr)
transaction$Sor <- as.numeric(transaction$Sor)
cde <- gares[, c("Cde", "Lng", "Lat")]
names(cde) <- c("Entr", "ELng", "ELat")
transaction <- left_join(transaction, cde, by = "Entr")
names(cde) <- c("Sor", "SLng", "SLat")
transaction <- left_join(transaction, cde, by = "Sor")
return(transaction)
}
result.LngLat <- GetLngLat(result)
head(result.LngLat)
head(gares)
count(gares,Societe)
ggplot(result.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat)) +
geom_point(data = gares %>% filter(Societe %in% c(4,6)), aes(Lat, Lng, col = Societe)) +
facet_grid(ID~Model) + ggtitle("Result: Geo-representation by DOW")
ggplot(result.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat)) +
geom_point(data = gares %>% filter(Societe %in% c(4,6)), aes(Lat, Lng, col = as.factor(Societe))) +
facet_grid(ID~Model) + ggtitle("Result: Geo-representation by DOW")
ggplot(result.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat)) +
#	geom_point(data = gares %>% filter(Societe %in% c(4,6)), aes(Lat, Lng, col = as.factor(Societe))) +
facet_grid(ID~Model) + ggtitle("Result: Geo-representation by DOW")
knit2html("SA_CC.Rmd")
Ind
Ind.result
library(dplyr)
library(cluster)
library(ggplot2)
library(gridExtra)
library(knitr)
CC %>% trx %>% filter(ID == "CC")
CC <- %>% trx %>% filter(ID == "CC")
CC <- trx %>% filter(ID == "CC")
CC %>% group_by(Entr, Sor) %>% summarise(n = n()) %>% ungroup() %>% arrange(desc(n))
CC %>% group_by(Entr, Sor) %>% summarise(n = n()) %>% ungroup() %>% arrange(desc(n)) %>% slice(1,4)
CC %>% group_by(Entr, Sor) %>% summarise(n = n()) %>% ungroup() %>% arrange(desc(n)) %>% slice(1:4)
CC.list <- CC %>% group_by(Entr, Sor) %>% summarise(n = n()) %>% ungroup() %>% arrange(desc(n)) %>% slice(1:4)
CC.hot <- inner_join(CC, CC.list)
seq(1,4)
order <- seq(1,4)
CC.list$order <- seq(1,4)
CC.list
CC.hot <- inner_join(CC, CC.list)
ggplot(CC.hot) + geom_point(aes(Date, TimeSor, col = as.factor(order)))
knit2html("SA_CC.Rmd")
knit2html("SA_CC.Rmd")
ggplot(CC.hot) + geom_bar(aes(DOW)) + facet_wrap(~order)
CC.list
knit2html("SA_CC.Rmd")
knit2html("SA_CC.Rmd")
knit2html("SA_CC.Rmd")
result %>% filter(ID == "CC")
result %>% ungroup() %>% filter(ID == "CC")
result %>% ungroup() %>% filter(ID == "CC" & Model == 0)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
head(gares)
gares %>% filter(Cde == 25006001)
gares %>% filter(Cde == 25006002)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
temp <- train_decompose
train_decompose <- Decompose(train)
gares %>% filter(Cde == 25006001)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
train_decompose <- Decompose(train)
head(train)
train$Entr[1]
train$Entr[1] == 25004206
train$Entr[1] == 25004204
if (train$Entr[1] == 25004204) {print("test")}
if (train$Entr[1] == 25004206) {print("test")}
train_decompose <- Decompose(train)
Pointeur
i
train$Entr[i] == 25004204
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
train_decompose <- Decompose(train)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
train_decompose <- Decompose(train)
train_decompose.LngLat <- GetLngLat(train_decompose)
ggplot(train_decompose.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat)) +
facet_wrap(~ID) + ggtitle("Result: Geo-representation")
ggplot(train_decompose.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat))
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
result %>% ungroup() %>% filter(ID == "CC")
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
gares %>% filter(Cde == 25004279)
train_decompose <- Decompose(train)
train_decompose %>% filter(Sor == 25004279)
train_decompose %>% filter(Entr == 25004279)
train_decompose %>% filter(Entr == 25004278)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
train_decompose <- Decompose(train)
head(train_decompose)
head(train)
temp<-train
temp$KMS <-0
train_decompose <- Decompose(temp)
head(train_decompose)
train_decompose %>% filter(Entr == 25004279)
head(train_decompose)
head(temp)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
train_decompose <- AfterDecompose(Decompose(BeforeDecompose(train)))
train_decompose.LngLat <- GetLngLat(train_decompose)
ggplot(train_decompose.LngLat) +
geom_point(aes(ELng, ELat, col = "Entr")) +
geom_point(aes(SLng, SLat, col = "Sor")) +
geom_segment(aes(x = ELng, xend = SLng, y = ELat, yend = SLat)) +
facet_wrap(~ID) + ggtitle("Result: Geo-representation")
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
i
j
temp
head(temp)
max.cluster <- length(unique(temp$TimeSor))
max.cluster
clus<- clusGap(temp[,"TimeSor"], kmeans, min(9, max.cluster))
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
i
j
temp
max.cluster <- length(unique(temp$TimeSor))
max.cluster
clus<- clusGap(temp[,"TimeSor"], kmeans, min(9, max.cluster))
class(temp$TimeSor)
source('~/Downloads/Vinci R/VA1/SA_decompose.R', echo=TRUE)
source('~/Downloads/Vinci R/VA1/SA_end2end.R', echo=TRUE)
knit2html("SA_CC.Rmd")
result <- data.frame(ID="", Entr=0, Sor=0, SD=0, T=0, Tmin=0, Tmax=0, n=0)
for (i in 1:nrow(ID.list)) {
temp <- train_decompose %>% filter(ID == ID.list$ID[i])
# ??? limit = 10 to be justified or modified
if(nrow(temp) >= 10) {
max.cluster <- length(unique(temp$TimeSor))
# if not many passages, we will not cluster
# decide nb of cluster
clus<- clusGap(temp[,"TimeSor"], kmeans, min(9, max.cluster))
n.cluster <- with(clus,maxSE(Tab[,"gap"],Tab[,"SE.sim"]))
set.seed(1234)
temp.kmeans <-   kmeans(temp[, "TimeSor"], centers = n.cluster)
temp$cluster <- temp.kmeans$cluster
T <- temp %>%
group_by(ID, Entr, Sor, cluster) %>%
summarise(n = n(), T = mean(TimeSor), SD = sd(TimeSor), Tmin = T -SD, Tmax = T + SD)
# remove line with SD = N.A.
T <- T %>% filter(n > 1)
T$cluster <- NULL
result <- rbind(result, T)
} # end of if
} # end of loop i
result <- result[-1,]
# ??? parameter: 5
result <- result %>% filter(n > 5)
# add DOW
result$DOW <- 0
temp <- result
for(i in 1:6) {
# add DOW to the T
temp$DOW <- i
result <- rbind(result, temp)
}
result.model.10 <- result[, c("ID", "Entr", "Sor", "DOW", "Tmin", "Tmax")]
result.model.10$Model <- 10
result.model.10$DOW <- as.numeric(result.model.10$DOW)
Ind <- rbind(ind.model.00, ind.model.02, ind.model.10, ind.model.12)
result.model.10$DOW <- as.numeric(result.model.10$DOW)
test.model.10 <- GetResult(test_decompose, result.model.10)
ind.model.10 <- GetInd(test.model.10, result.model.10)
ind.model.10$Model <- 10
Ind <- rbind(ind.model.00, ind.model.02, ind.model.10, ind.model.12)
Ind.result <- Ind %>% group_by(ID) %>% summarise(Model = sum(Model[Ind == max(Ind)]))
result <- rbind(result.model.00, result.model.02, result.model.10, result.model.12)
result.final <- inner_join(result, Ind.result)
result.LngLat <- GetLngLat(result)
Ind.result
knit2html("SA_CC.Rmd")
save.image()
library(dplyr)
library(cluster)
library(ggplot2)
library(gridExtra)
library(knitr)
input <- read.table("Tis_historique.csv", sep = ",", header = T)
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- read.table("Tis_historique.csv", sep = ",")
input <- read.table("Tis_historique.csv", sep = ",")
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
head(input)
input <- tbl_df(input)
count(input, Badge)
input
count(input, StÃ©)
names(input)
names(input) <- c("pays", "ste", "client", "badge",
"sEntr", "Entr", "vEntr", "DateEntr", "hEntr",
"sSor", "Sor", "vSor", "hSor", "DateSor")
input
names(input, sEntr)
count(input, sEntr)
count(input, sSor)
input&sEntr <- as.character(input&sEntr)
input
input&sEntr <- as.character(input&sEntr)
input
input[input$sEntr < 10, ]$sEntr <- paste0("0", input[input$sEntr < 10, ]$sEntr)
input
input$sSor <- as.character(input$sSor)
input[input$sSor < 10, ]$sSor <- paste0("0", input[input$sSor < 10, ]$sSor)
count(input, sSor)
input$sSor <- as.character(input$sSor)
input[input$sSor < 10, ]$sSor <- paste0("0", input[input$sSor < 10, ]$sSor)
input[input$sSor < 10, ]$sSor
count(input, Sor)
input[input$sSor < 10, ]
count(input, sSor)
class(input$sSor)
input$sSor>10
input$sSor<10
sum(input$sSor<10)
input$sSor <- as.numeric(input$sSor)
input[input$sSor < 10, ]$sSor <- paste0("0", input[input$sSor < 10, ]$sSor)
input
class(input$Entr)
class(input$Sor)
count(input, Entr)
count(input, Sor)
max(input$Sor)
min(input$Sor)
max(input$Entr)
input$Entr <- as.character(input$Entr)
input[input$Entr < 10, ]$Entr <- paste0("0", input[input$Entr < 10, ]$Entr)
input[input$Entr < 100, ]$Entr <- paste0("0", input[input$Entr < 100, ]$Entr)
input$Sor <- as.character(input$Sor)
input[input$Sor < 10, ]$Sor <- paste0("0", input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0("0", input[input$Sor < 100, ]$Sor)
input
input$Sor <- as.numeric(input$Sor)
input[input$Sor < 10, ]$Sor <- paste0("0", input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0("0", input[input$Sor < 100, ]$Sor)
input$Sor <- as.numeric(input$Sor)
input
input[input$Sor < 10, ]$Sor <- paste0("0", input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0("0", input[input$Sor < 100, ]$Sor)
count(input,Sor)
input$Entr <- as.numeric(input$Entr)
input[input$Entr < 10, ]$Entr <- paste0("0", input[input$Entr < 10, ]$Entr)
input[input$Entr < 100, ]$Entr <- paste0("0", input[input$Entr < 100, ]$Entr)
count(input,Entr)
input$aEntr <- paste0(250, input$sEntr, input$Entr)
input
input$Entr <- as.numeric(input$Entr)
input[input$Entr < 10, ]$Entr <- paste0("0", input[input$Entr < 10, ]$Entr)
input[input$Entr < 100, ]$Entr <- paste0("0", input[input$Entr < 100, ]$Entr)
input
input$Sor <- as.numeric(input$Sor)
input[input$Sor < 10, ]$Sor <- paste0("0", input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0("0", input[input$Sor < 100, ]$Sor)
input
input[input$Sor < 100 & input$Sor >= 10, ]$Sor <- paste0("0", input[input$Sor < 100 & input$Sor >= 10, ]$Sor)
input$Sor[1]
t<-input$Sor[1]
t
class(t)
paste0(0,t)
input
input$Sor <- as.numeric(input$Sor)
input[input$Sor < 10, ]$Sor <- paste0(0, input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0(0, input[input$Sor < 100, ]$Sor)
input
input$Sor[1]
paste0(0,input$Sor[1])
input[input$Sor < 100, ]$Sor <- paste0(0, input[input$Sor < 100, ]$Sor)
input
input[input$Sor < 10, ]$Sor <- paste0(0, input[input$Sor < 10, ]$Sor)
input[input$Sor < 100, ]$Sor <- paste0(0, input[input$Sor < 100, ]$Sor)
input
input$Sor <- as.numeric(input$Sor)
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- tbl_df(input)
names(input) <- c("pays", "ste", "client", "badge",
"sEntr", "Entr", "vEntr", "DateEntr", "hEntr",
"sSor", "Sor", "vSor", "hSor", "DateSor")
input$aEntr <- 25000000 + input$sEntr * 1000 + input$Entr
input
input$aSor <- 25000000 + input$sSor * 1000 + input$Sor
input
input[input$Entr == 0, ]$aEntr <- 0
input
count(input, Entr)
count(input, aEntr)
names(input) <- c("pays", "ste", "client", "badge",
"sEntr", "cEntr", "vEntr", "DateEntr", "hEntr",
"sSor", "cSor", "vSor", "hSor", "DateSor")
names(input) <- c("pays", "ste", "client", "badge",
"sEntr", "cEntr", "vEntr", "DateEntr", "hEntr",
"sSor", "cSor", "vSor", "hSor", "DateSor")
# Cde for Entr & Sor
input$Entr <- 25000000 + input$sEntr * 1000 + input$cEntr
input$Sor <- 25000000 + input$sSor * 1000 + input$cSor
input[input$cEntr == 0, ]$Entr <- 0
input
input$sEntr <- NULL
input$cEntr <- NULL
input$sSor <- NULL
input$cSor <- NULL
input
input$NA
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- tbl_df(input)
names(input) <- c("pays", "ste", "client", "badge",
"sEntr", "cEntr", "vEntr", "DateEntr", "hEntr",
"sSor", "cSor", "vSor", "hSor", "DateSor")
# Cde for Entr & Sor
input$Entr <- 25000000 + input$sEntr * 1000 + input$cEntr
input$Sor <- 25000000 + input$sSor * 1000 + input$cSor
input[input$cEntr == 0, ]$Entr <- 0
input
input$sEntr <- NULL
input$cEntr <- NULL
input$sSor <- NULL
input$cSor <- NULL
input
input %>% filter(DateEntr <> DateSor)
input %>% filter(DateEntr != DateSor)
dim(input)
input %>% filter(DateEntr != DateSor & DateEntr != 0)
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- tbl_df(input)
names(input) <- c("pays", "ste", "ID", "badge",
"sEntr", "cEntr", "voieEntr", "DateEntr", "hEntr",
"sSor", "cSor", "voieSor", "hSor", "DateSor")
# badge
input$Societe <- input$pays * 10 + input$ste
# Cde for Entr & Sor
input$Entr <- 25000000 + input$sEntr * 1000 + input$cEntr
input$Sor <- 25000000 + input$sSor * 1000 + input$cSor
input[input$cEntr == 0, ]$Entr <- 0
input$sEntr <- NULL
input$cEntr <- NULL
input$sSor <- NULL
input$cSor <- NULL
input
input$Societe <- input$pays * 100 + input$ste
input
input$pays <- NULL
input$ste <- NULL
as.Date(1)
as.Date(0)
as.Date(0, orgin = as.Date("0000-0-0"))
as.Date(0, orgin = as.Date("0000-1-1"))
as.Date(1, orgin = as.Date("0000-1-1"))
as.Date(1, orgin = as.Date("1900-1-1"))
as.Date(1, origin = as.Date("1900-1-1")))
as.Date(1, origin = as.Date("1900-1-1"))
as.Date(1, origin = as.Date("0000-1-1"))
as.Date(1, origin = as.Date("-1-1-1"))
as.Date(1, origin = as.Date("0-1-1"))
as.Date(0, origin = as.Date("0-1-1"))
as.Date(20150803, origin = as.Date("0-1-1"))
as.Date(paste(2015,1,1))
input$Y <- substr(DateSor, 1, 4)
input$M <- substr(DateSor, 5, 6)
input$D <- substr(DateSor, 7, 8)
input$Date <- as.Date(paste0(input$Y, "-", input$M, "-", input$D))
input
input$Y <- substr(input$DateSor, 1, 4)
input$M <- substr(input$DateSor, 5, 6)
input$D <- substr(input$DateSor, 7, 8)
input$Y <- substr(input$DateSor, 1, 4)
input$M <- substr(input$DateSor, 5, 6)
input$D <- substr(input$DateSor, 7, 8)
input$Date <- as.Date(paste0(input$Y, "-", input$M, "-", input$D))
input
input$Y <- NULL
input$M <- NULL
input$D <- NULL
input
input$Y <- substr(input$DateSor, 1, 4)
input$M <- substr(input$DateSor, 5, 6)
input$D <- substr(input$DateSor, 7, 8)
input$DateSor <- as.Date(paste0(input$Y, "-", input$M, "-", input$D))
input$Y <- NULL
input$M <- NULL
input$D <- NULL
input
input$Date<-NULL
input
input$H <- substr(input$hSor, 1, 2)
input$M <- substr(input$hSor, 3, 4)
input$S <- substr(input$hSor, 5, 6)
input$TimeSor <- input$H + input$M/60 + input$S/3600
input
input$TimeSor
input$TimeSor <- input$H + input$M/60
input$TimeSor <- input$H + as.numeric(input$M) / 60
input$TimeSor <- input$H + as.numeric(input$M) / 60
input$H <- substr(input$hSor, 1, 2)
input$M <- substr(input$hSor, 3, 4)
input$S <- substr(input$hSor, 5, 6)
input$TimeSor <- input$H + as.numeric(input$M) / 60
input
class(input$M)
input$M
input$M/60
as.numeric(input$M)/60
input$TimeSor <- as.numeric(input$H) + as.numeric(input$M) / 60
input$S<- NULL
input$H <- substr(input$hEntr, 1, 2)
input$M <- substr(input$hEntr, 3, 4)
input$TimeEntr <- as.numeric(input$H) + as.numeric(input$M) / 60
input
input[is.na(TimeEntr),]
input[is.na(TimeEntr)]
input[is.na(input$TimeEntr), ]
input[is.na(input$TimeEntr), ]$TimeEntr <- input[is.na(input$TimeEntr), ]$TimeSor - .5
input$H <- NULL
input$M <- NULL
input <- read.table("Tis_historique.csv", sep = ",", header = TRUE)
input <- tbl_df(input)
names(input) <- c("pays", "ste", "ID", "badge",
"sEntr", "cEntr", "voieEntr", "DateEntr", "hEntr",
"sSor", "cSor", "voieSor", "hSor", "DateSor")
# badge
input$Societe <- input$pays * 100 + input$ste
input$pays <- NULL
input$ste <- NULL
# Cde for Entr & Sor
input$Entr <- 25000000 + input$sEntr * 1000 + input$cEntr
input$Sor <- 25000000 + input$sSor * 1000 + input$cSor
input[input$cEntr == 0, ]$Entr <- 0
input$sEntr <- NULL
input$cEntr <- NULL
input$sSor <- NULL
input$cSor <- NULL
# DateSor
input$Y <- substr(input$DateSor, 1, 4)
input$M <- substr(input$DateSor, 5, 6)
input$D <- substr(input$DateSor, 7, 8)
input$Date <- as.Date(paste0(input$Y, "-", input$M, "-", input$D))
input$Y <- NULL
input$M <- NULL
input$D <- NULL
# HeureSor
input$H <- substr(input$hSor, 1, 2)
input$M <- substr(input$hSor, 3, 4)
input$TimeSor <- as.numeric(input$H) + as.numeric(input$M) / 60
input$H <- substr(input$hEntr, 1, 2)
input$M <- substr(input$hEntr, 3, 4)
input$TimeEntr <- as.numeric(input$H) + as.numeric(input$M) / 60
input[is.na(input$TimeEntr), ]$TimeEntr <- input[is.na(input$TimeEntr), ]$TimeSor - .5
input$H <- NULL
input$M <- NULL
input
Input <- input %>% select(Societe, ID, Date, Entr, Sor, TimeEntr, TimeSor)
Input
Input <- input %>% select(Societe, ID, Entr, Sor, Date, TimeEntr, TimeSor)
as.Date("2015/8/3")
as.POSIXct( as.Date("2015/8/3") )$wday
as.POSIXlt( as.Date("2015/8/3") )$wday
Input$DOW <- as.POSIXlt(Input$Date)$wday
Input
count(Input, ID)
Input <- input %>% select(Societe, ID, Entr, Sor, voieSor, Date, TimeEntr, TimeSor)
Input$DOW <- as.POSIXlt(Input$Date)$wday
Input
ID.ref <- read.table("ID.ref.csv", sep = ",", header = TRUE)
ID.ref
ID.ref <- read.table("ID.ref.csv", sep = ",", header = TRUE)
ID.ref
names(ID.ref)[c(1,3,6)] <- c(Nom, NOM, ID)
ID.ref %>% select(Nom, ID)
ID.ref <- read.table("ID.ref.csv", sep = ",", header = TRUE)
names(ID.ref)[c(1,3,6)] <- c("Nom", "NOM", "ID")
ID.ref %>% select(Nom, ID)
ID.ref <- ID.ref %>% select(Nom, ID)
Input
ID.ref
count(Input, ID)
count(Input, ID) %>% full_join(ID.ref)
print(count(Input, ID) %>% full_join(ID.ref), 22)
print(Input, nrow = 20)
help(print)
print(count(Input, ID) %>% full_join(ID.ref), n = 22)
Input <-  inner_join(Input, ID.ref)
Input
save.image()
