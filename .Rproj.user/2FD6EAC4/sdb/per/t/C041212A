{
    "contents" : "##########\n##########\n# 20150723\n# OD -> Troncon\n##########\n##########\n# load(\"Troncons_A789.RData\")\n# load(\"A7_par_pk.RData\")\n# load(\"A8_par_pk.RData\")\n# load(\"A9_par_pk.RData\")\n# load(\"Troncons_A7.RData\")\n# load(\"Troncons_A8.RData\")\n# load(\"Troncons_A9.RData\")\n# gares <- read.table(\"garesLatLng.csv\", header = T, sep = \",\")\n\ndecompose <- function(transaction){\n  #DECOMPOSER LES TRAJETS PAR AUTOROUTE UNIQUE\n  #Et traiter le système ouvert\n  gares$Autoroute <- as.character(gares$Autoroute)\n  transaction$Entr <- as.numeric(as.character(transaction$Entr))\n  transaction$Sor <- as.numeric(as.character(transaction$Sor))\n  Autoroute <- vector(mode = \"character\", length = nrow(transaction))\n  transaction_decompose <- cbind(transaction, Autoroute)\n  transaction_decompose$Autoroute <- as.character(transaction_decompose$Autoroute)\n  transaction_restant <- transaction\n  Pointeur <- 1\n  Pointeur_restant <- 1\n  Gare_inconnue <- 0 #Gares du système ouvert que le code ne connait pas\n  for (i in 1 : nrow(transaction)){\n    if (  ( (transaction$Entr[i] %in% Troncons_A789[,4]) | (transaction$Entr[i] %in% Troncons_A789[,6])  ) & \n          ( (transaction$Sor[i] %in% Troncons_A789[,4]) | (transaction$Sor[i] %in% Troncons_A789[,6])  )  ) { \n      # SI TRAJET DANS LES TROIS AUTOROUTES\n      if (gares$Autoroute[match(transaction$Entr[i],gares$Cde)] !=  gares$Autoroute[match(transaction$Sor[i],gares$Cde)] ) { \n        #E=A7etS=A9 ou l'inverse\n        if (transaction$Entr[i] != 25004210 & transaction$Sor[i] != 25004210){  \n          # Entrée et sortie <> Orange Centre\n          if(gares$Autoroute[match(transaction$Entr[i],gares$Cde)] == \"A7\"){\n            # E=A7 S=A9\n            newrow1 <- c(transaction[i,1],transaction$Entr[i],25004210,transaction[i, c(4:ncol(transaction))],\"A7\")\n            newrow2 <- c(transaction[i,1],25004210,transaction$Sor[i], transaction[i, c(4:ncol(transaction))],\"A9\")\n            transaction_decompose = rbind(transaction_decompose[1:Pointeur,],newrow1,newrow2,transaction_decompose[-(1:Pointeur),])\n            Pointeur <- Pointeur +2\n          }\n          else if(gares$Autoroute[match(transaction$Entr[i],gares$Cde)] == \"A9\"){\n            # E=A9 S=A7\n            newrow1 <- c(transaction[i,1],transaction$Entr[i],25004210,transaction[i, c(4:ncol(transaction))],\"A9\")\n            newrow2 <- c(transaction[i,1],25004210,transaction$Sor[i], transaction[i, c(4:ncol(transaction))],\"A7\")\n            transaction_decompose = rbind(transaction_decompose[1:Pointeur,],newrow1,newrow2,transaction_decompose[-(1:Pointeur),])\n            Pointeur <- Pointeur +2\n          }\n        }\n        else { # E=A9 S=OC ou l'inverse\n          transaction_decompose$Autoroute[Pointeur] <- \"A9\"\n        }\n      }\n      else {\n        transaction_decompose$Autoroute[Pointeur] <- gares$Autoroute[match(transaction$Entr[i],gares$Cde)]\n      }\n      if (Pointeur_restant == 1){\n        transaction_restant <- transaction_restant[2:nrow(transaction_restant),]\n      }\n      else {\n        transaction_restant <- rbind(transaction_restant[(1:(Pointeur_restant-1)),],transaction_restant[-(1:(Pointeur_restant)),])\n        Pointeur_restant <- Pointeur_restant - 1\n      }\n    }\n    \n    ## deactivate: no information about Voie\n    else if (transaction$Entr[i] < 0 & ( (transaction$Sor[i] %in% Troncons_A789[,4])|(transaction$Sor[i] %in% Troncons_A789[,6]) ) ){ \n      #Si Entr = 0 et Sor dans A789\n      if (transaction$Sor[i] == 25006001){ #Canet de mereuil\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25004278 ,25006001,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Coudoux -> Canet de méreuil\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006001 ,25004278,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Canet -> Coudoux\n      }\n      else if (transaction$Sor[i] == 25006010){ #Fréjus\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006022 ,25006010,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Antibes PV Nord-> Fréjus\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006010 ,25006012,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Fréjus -> Antibes PV \n      }\n      else if (transaction$Sor[i] == 25006011){ #Les Adrets\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006022 ,25006011,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Antibes PV Nord-> Les Adrets\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006011 ,25006012,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Les Adrets -> Antibes PV \n      }\n      else if (transaction$Sor[i] == 25006014){ #Antibes Ouest\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006009 ,25006014,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Capitou -> Antibes Ouest\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006014 ,25006009,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Antibes Ouest -> Capitou \n      }\n      else if (transaction$Sor[i] == 25006012){ #Antibes PV\n        if (transaction$Voie[i] >= 20 ){#PV Sud, donc de Cannes vers Nice\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006009 ,25006015,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Capitou -> Cagnes Ouest Nord\n        else { #PV Nord, de Nice vers Cannes\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006015 ,25006009,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Cagnes Ouest Nord -> Capitou \n      }\n      else if (transaction$Sor[i] == 25006024){ #Sophia\n        transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006024 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        #Entrée seule, don trajet Sophia -> Saint Isidore\n      }\n      else if (transaction$Sor[i] == 25006013){ #Antibes Est\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006020 ,25006013,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Saint Isidore -> Antibes Est\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006013 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Antibes Est -> Saint Isidore\n      }\n      else if (transaction$Sor[i] == 25006017){ #Cagnes Ouest Sud\n        transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006017 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        #On crée un trajet  Cagnes Ouest Sud -> Saint Isidore\n      }\n      else if (transaction$Sor[i] == 25006015){ #Cagnes Ouest Nord\n        transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006020 ,25006015,transaction[i, c(4:ncol(transaction))],\"A8\")\n        #On crée un trajet  Saint Isidore -> Cagnes Ouest Nord\n      }\n      else if (transaction$Sor[i] == 25006016){ #Cagnes Est\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006020 ,25006016,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Saint Isidore -> Cagnes Est\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006016 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #TrajetCagnes Est -> Saint Isidore\n      }\n      else if (transaction$Sor[i] == 25006021){ #Saint Isidore Ech Est\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006027 ,25006021,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet La Turbie -> Saint Isidore Ech Est\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006021 ,25006027,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Saint Isidore Ech Est -> La Turbie\n      }\n      else if (transaction$Sor[i] == 25006021){ #Saint Isidore Ech Est\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006027 ,25006021,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet La Turbie -> Saint Isidore Ech Est\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006021 ,25006027,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Saint Isidore Ech Est -> La Turbie\n      }\n      else if (transaction$Sor[i] == 25006019){ #Saint Isidore Ech Ouest\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006012 ,25006019,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Antibes PV -> Saint Isidore Ech Ouest\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006019 ,25006012,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Saint Isidore Ech Ouest -> Antibes PV\n      }\n      else if (transaction$Sor[i] == 25006020){ #Saint Isidore PV\n        if (transaction$Voie[i] >= 20 ){#Nord, donc de l'Italie vers Cannes\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006026 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet La Turbie Ech -> Cagnes Ouest Nord\n        else { #Sud, de Cannes vers l'Italie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006020 ,25006026,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet Cagnes Ouest Nord -> La Turbie Ech\n      }\n      else if (transaction$Sor[i] == 25006026){ #La Turbie Ech\n        if (transaction$Voie[i] >= 20 ){#Sortie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006020 ,25006026,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet Saint isidore PV -> La Turbie Ech\n        else { \n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006026 ,25006020,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet La Turbie Ech -> Saint isidore PV\n      }\n      else if (transaction$Sor[i] == 25006027){ #La Turbie PV\n        if (transaction$Voie[i] >= 20 ){# Nord, donc de l'Italie vers Cannes\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i],25006027 ,25006026,transaction[i, c(4:ncol(transaction))],\"A8\")\n        } #On crée un trajet La Turbie PV -> La Turbie Ech\n        else { #Sud, de Cannes vers l'Italie\n          transaction_decompose[Pointeur,] <- c(transaction$ID[i], 25006026 ,25006027,transaction[i, c(4:ncol(transaction))],\"A8\")\n        }  #Trajet La Turbie Ech -> La Turbie PV\n      }\n      else { Gare_inconnue <- Gare_inconnue +1\n      }\n    }\n    Pointeur <- Pointeur +1\n    Pointeur_restant <- Pointeur_restant +1\n  }\n  \n  transaction_decompose <- transaction_decompose[transaction_decompose$Autoroute > 0,]\n  \n  \n  #DECOMPOSER LES OD PAR TRONCONS :\n  transaction_par_troncons <- data.frame(ID = \"\", ID_Troncon= 0, Autoroute= \"\", Entr= 0, Sor=0,Date = 0, DOW=0, WOY=0, TimeEntr = 0, TimeSor =0, Sens = 0)\n  transaction_par_troncons$Autoroute <- as.character(transaction_par_troncons$Autoroute)\n  # ??? transaction_decompose$Year <- as.character(transaction_decompose$Year)\n  transaction_par_troncons$ID <- as.character(transaction_par_troncons$ID)\n  \n  for (i in 1:nrow(transaction_decompose)){\n    if ( transaction_decompose$Autoroute[i] == \"A7\"){\n      entree <- match(transaction_decompose$Entr[i],A7_par_pk$Cde)\n      sortie <- match(transaction_decompose$Sor[i],A7_par_pk$Cde)\n      if ( entree < sortie ) { # SENS 1\n        for ( j in entree : (sortie-1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,c(transaction_decompose$ID[i],Troncons_A7$ID_Troncon[j],\"A7\",A7_par_pk$Cde[j],A7_par_pk$Cde[j+1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],1))\n        }\n      }\n      else{ #SENS 2\n        for ( j in entree : (sortie+1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,c(transaction_decompose$ID[i],Troncons_A7$ID_Troncon[j-1],\"A7\",A7_par_pk$Cde[j],A7_par_pk$Cde[j-1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],2))\n        }\n      }\n    }\n    else if ( transaction_decompose$Autoroute[i] == \"A8\"){\n      entree <- match(transaction_decompose$Entr[i],A8_par_pk$Cde)\n      sortie <- match(transaction_decompose$Sor[i],A8_par_pk$Cde)\n      if ( entree < sortie ) { # SENS 1\n        for ( j in entree : (sortie-1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,\n                                            c(transaction_decompose$ID[i],Troncons_A8$ID_Troncon[j],\"A8\",\n                                              A8_par_pk$Cde[j],A8_par_pk$Cde[j+1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],1))\n        }\n      }\n      else{ #SENS 2\n        for ( j in entree : (sortie+1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,c(transaction_decompose$ID[i],Troncons_A8$ID_Troncon[j-1],\"A8\",A8_par_pk$Cde[j],A8_par_pk$Cde[j-1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],2))\n        }\n      }\n    }\n    else if ( transaction_decompose$Autoroute[i] == \"A9\"){\n      entree <- match(transaction_decompose$Entr[i],A9_par_pk$Cde)\n      sortie <- match(transaction_decompose$Sor[i],A9_par_pk$Cde)\n      if ( entree < sortie ) { # SENS 1\n        for ( j in entree : (sortie-1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,c(transaction_decompose$ID[i],Troncons_A9$ID_Troncon[j],\"A9\",A9_par_pk$Cde[j],A9_par_pk$Cde[j+1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],1))\n        }\n      }\n      else{ #SENS 2\n        for ( j in entree : (sortie+1) ){\n          transaction_par_troncons <- rbind(transaction_par_troncons,c(transaction_decompose$ID[i],Troncons_A9$ID_Troncon[j-1],\"A9\",A9_par_pk$Cde[j],A9_par_pk$Cde[j-1],transaction_decompose$Date[i],transaction_decompose$DOW[i],transaction_decompose$WOY[i],transaction_decompose$TimeEntr[i],transaction_decompose$TimeSor[i],2))\n        }\n      }\n    }\n  }\n  transaction_par_troncons <- transaction_par_troncons[-1,]\n  transaction_par_troncons$Date <- as.Date(as.numeric(transaction_par_troncons$Date), origin = as.Date(\"1970-1-1\"))\n  transaction_par_troncons$TimeEntr <- as.numeric(transaction_par_troncons$TimeEntr)\n  transaction_par_troncons$TimeSor <- as.numeric(transaction_par_troncons$TimeSor)\n  transaction_par_troncons <- transaction_par_troncons[, c(1,4:(ncol(transaction_par_troncons)-1))]\n  \n  return(rbind(transaction_par_troncons, transaction_restant))\n}",
    "created" : 1437662401243.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1620188406",
    "id" : "C041212A",
    "lastKnownWriteTime" : 1437736470,
    "path" : "~/RStudio_Default_Working_Directory/TS/VA1/SA_decompose.R",
    "project_path" : "SA_decompose.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}